#include<iostream>
#include<stdlib.h>
#include<time.h>
using namespace std;
//двухмерный массив
void main()
{
	setlocale(LC_ALL, "rus");
    system("chcp 1251");
    system("cls");
    srand(time(NULL));

    //одномерный массив
    int A[3]{ 1,2,3 };
    for (int i = 0; i < 3; i++)
    {
        cout << "A[" << i << "]=" << A[i] << ";";
    }
    cout << endl;
    system("cls");
    //многмерный массив
    int B[3][4]{};//массив из 3х строк и 4х столбцов(массив из 3х строк по 4 элемента в кождой)
    // работа с двухмерным массивом, как с таблицей через вложенные циклы
    for (int i = 0; i < 3; i++) // цикл прохода по строкам (перебор строк)
    {
        for (int j = 0; j < 4; j++)// цикл прохода по столбцам(перебор содержимого строки)
        {
            // обращение к элементам двумерного массива по их индексам
            B[i][j] = rand() % (100 - (-99)) - 99;
            cout << "B[" << i << "][" << j << "]=" << B[i][j] << "\t";
        }
        cout << endl;//табличный вывод на экран
    }
    system("cls");
    //инициализация двумерного массива перечеслением его элемнтов
    int Mass1[2][3] = { 1,2,3,4,5,6 };//автоматическое разделение по строкам
    int Mass2[2][3] = { {1,2,3,},{4,5,6} };// с разделением по строкам
    int Mass3[2][3] = { 1,2,3,4 }; //int Mass3[2][3]={1,2,3,4,0,0};
    int Mass4[2][3] = { {1,2},{3,4} };//int Mass4[2][3] = { {1,2,0},{3,4,0} };
    int Mass5[2][3] = { 5 };//int Mass5[2][3] = { 5,0,0,0,0,0 };
    int Mass6[2][3] = { {},{0,5} };//int Mass6[2][3] = { {0,0,0},{0,5,0} };
    int Mass7[2][3] = {};//нулевой массив,заполненый нулями
    //Mass7[1][1] = 5;//присваем элемент с индексом 1 по строке и 1 по столбцу значение 5
    //[1][1]=1*3+1=4
    //Mass7[0][4] = 100; //[0][4]=0*3+4=4 //так нельзя!!!
    for (int i = 0; i < 2; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            cout << "Mass1[" << i << "][" << j << "]=" << Mass7[i][j] << "\t";

        }
        cout << endl;
    }
    system("cls");
    const int rows = 10;//кол-во строк
    const int columns = 6;//кол-во столбцов
    int Array[rows][columns]{};//int Array[rows][columns]={};
    int Max, Min = 0;//максимальное и минимальное значение 
    //задание значений элемнтов массива
    for (int i = 0; i < rows; i++)
    {
        for (int j = 0; j < columns; j++)
        {
            //повторная генерация при выпадений ненужных значений, состоящих из одной цифры
            do
            {
                Array[i][j] = rand() % (100 - (-99)) - 99;// -99...99
            } while (Array[i][j] > -10 && Array[i][j] < 10); //исключаем числа от -9 до 9
            cout << "A[" << i << "][" << j << "]=";
            if (Array[i][j] >= 0)cout << " ";//добовляем пробел перед положительным цислом
            cout << Array[i][j] << "\t";
        }
        cout << endl;
    }
    //работа с элментами массива построчно
     //работа с элементами массива построчно
    for (int i = 0; i < rows; i++) //цикл прохода по строкам
    {
        //для каждой i-ой строки в начале считаем максимальным элемент с индексом 0 по столбцу(перевый по порядку элемент в строке)
        Max = Array[i][0];
        //for (int j = 0; j < columns; j++) //цикл прохода по элементам внутри строки
        for (int j = 0; j < columns; j++) // начиная со следующего элемента
        {
            if (Array[i][j] > Max)Max = Array[i][j]; //сравниваем текущий элемент с максимальным 
        }
        cout << "Максимальный элемент " << i << "-ой строки равен: " << Max << endl;
    }
    //работа с элементами массива по столбцам
    for (int j = 0; j < columns; j++) //цикл прохода по столбцам
    {
        Min = Array[0][j];//для каждого j-го столбца в начале считаем минимальным элемент с индексом 0 по строке(первый по порядку с толбце)
        //for (int i = 0; i < rows; i++) //цикл проха по элементам внутри столбца(по строкам)
        for (int i = 1; i < rows; i++)//начиная со следующего элемента
        {
            if (Array[i][j] < Min)Min = Array[i][j]; //сравниваем текущий элемент с минимальным
        }
        cout << "Минимальный элемент " << j << "-го столбца равен: " << Min << endl;
    }

}